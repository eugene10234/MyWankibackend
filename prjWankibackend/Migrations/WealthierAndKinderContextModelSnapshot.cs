// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prjWankibackend.Models.Database;

#nullable disable

namespace prjWankibackend.Migrations
{
    [DbContext(typeof(WealthierAndKinderContext))]
    partial class WealthierAndKinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("prjWankibackend.Models.Database.TBlock", b =>
                {
                    b.Property<int>("FBlockSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fBlockSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FBlockSid"));

                    b.Property<string>("FBlockType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fBlockType")
                        .IsFixedLength();

                    b.Property<string>("FBlockUserId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fBlockUserId");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.HasKey("FBlockSid");

                    b.ToTable("tBlock", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TBroker", b =>
                {
                    b.Property<string>("FBrokerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fBrokerId");

                    b.Property<string>("FBrokerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fBrokerName");

                    b.HasKey("FBrokerId")
                        .HasName("PK__tBroker__41F14AB6745A9C6D");

                    b.ToTable("tBroker", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TComment", b =>
                {
                    b.Property<int>("FCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fCommentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FCommentId"));

                    b.Property<string>("FContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fContent");

                    b.Property<DateOnly?>("FCratedAt")
                        .HasColumnType("date")
                        .HasColumnName("fCratedAT");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<int?>("FPostId")
                        .HasColumnType("int")
                        .HasColumnName("fPostId");

                    b.Property<DateOnly?>("FUpdateAt")
                        .HasColumnType("date")
                        .HasColumnName("fUpdateAt");

                    b.HasKey("FCommentId");

                    b.ToTable("tComment", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TCustomerInvestAccount", b =>
                {
                    b.Property<int>("FInvestAccountId")
                        .HasColumnType("int")
                        .HasColumnName("fInvestAccountId");

                    b.Property<string>("FBrokerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fBrokerId");

                    b.Property<string>("FInvestAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fInvestAccount");

                    b.Property<string>("FInvestPass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fInvestPass");

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.HasKey("FInvestAccountId")
                        .HasName("PK__tCustome__B185030D21627549");

                    b.ToTable("tCustomerInvestAccount", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TCustomerPreference", b =>
                {
                    b.Property<int>("FPreferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fPreferId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FPreferId"));

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.HasKey("FPreferId")
                        .HasName("PK__tCustome__04C2DDC6E0778F80");

                    b.ToTable("tCustomerPreference", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TCustomerStra", b =>
                {
                    b.Property<int>("FStraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fStraId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FStraId"));

                    b.Property<decimal?>("F10Ma")
                        .HasColumnType("money")
                        .HasColumnName("f10MA");

                    b.Property<decimal?>("F20Ma")
                        .HasColumnType("money")
                        .HasColumnName("f20MA");

                    b.Property<decimal?>("F5Ma")
                        .HasColumnType("money")
                        .HasColumnName("f5MA");

                    b.Property<bool?>("FBuySell")
                        .HasColumnType("bit")
                        .HasColumnName("fBuySell");

                    b.Property<int?>("FDvalue")
                        .HasColumnType("int")
                        .HasColumnName("fDValue");

                    b.Property<int?>("FKvalue")
                        .HasColumnType("int")
                        .HasColumnName("fKValue");

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.Property<decimal?>("FPriceSet")
                        .HasColumnType("money")
                        .HasColumnName("fPriceSet");

                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.Property<string>("FTranType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fTranType");

                    b.HasKey("FStraId")
                        .HasName("PK__tCustome__3FE09AD1FA411830");

                    b.ToTable("tCustomerStra", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TDistrict", b =>
                {
                    b.Property<int>("FDistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fDistrictId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FDistrictId"));

                    b.Property<string>("FDistrict")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fDistrict");

                    b.HasKey("FDistrictId");

                    b.ToTable("tDistrict", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TEmployeeMember", b =>
                {
                    b.Property<int>("FEmployeeSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fEmployeeSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FEmployeeSid"));

                    b.Property<string>("FAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAccount");

                    b.Property<DateOnly?>("FBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("fBirthDate");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<string>("FFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fFirstName");

                    b.Property<string>("FIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fIdentification");

                    b.Property<string>("FIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fIp");

                    b.Property<string>("FLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fLastName");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<byte[]>("FMemberImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fMemberImage");

                    b.Property<string>("FMemberImagePath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberImagePath");

                    b.Property<string>("FPassword")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fPassword");

                    b.Property<int?>("FPermissions")
                        .HasColumnType("int")
                        .HasColumnName("fPermissions");

                    b.Property<DateOnly?>("FRegDate")
                        .HasColumnType("date")
                        .HasColumnName("fRegDate");

                    b.Property<string>("FSex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fSex")
                        .IsFixedLength();

                    b.Property<string>("FStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fStatus")
                        .IsFixedLength();

                    b.Property<string>("FUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fUserName");

                    b.HasKey("FEmployeeSid");

                    b.ToTable("tEmployeeMember", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TFollower", b =>
                {
                    b.Property<int>("FFollowerSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fFollowerSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FFollowerSid"));

                    b.Property<string>("FFollowerMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fFollowerMemberId");

                    b.Property<string>("FFollowingMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fFollowingMemberId");

                    b.HasKey("FFollowerSid");

                    b.ToTable("tFollower", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TGroupMember", b =>
                {
                    b.Property<int>("FGroupSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fGroupSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FGroupSid"));

                    b.Property<string>("FAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAccount");

                    b.Property<string>("FCoLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fCoLocation");

                    b.Property<string>("FCorporation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fCorporation");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<string>("FIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fIp");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<byte[]>("FMemberImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fMemberImage");

                    b.Property<string>("FMemberImagePath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberImagePath");

                    b.Property<string>("FPassword")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fPassword");

                    b.Property<int?>("FPermissions")
                        .HasColumnType("int")
                        .HasColumnName("fPermissions");

                    b.Property<DateOnly?>("FRegDate")
                        .HasColumnType("date")
                        .HasColumnName("fRegDate");

                    b.Property<string>("FRepresentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fRepresentName");

                    b.Property<string>("FStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fStatus")
                        .IsFixedLength();

                    b.Property<int?>("FTotalCapital")
                        .HasColumnType("int")
                        .HasColumnName("fTotalCapital");

                    b.Property<string>("FUniBusinessNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fUniBusinessNo");

                    b.HasKey("FGroupSid");

                    b.ToTable("tGroupMember", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.THashtag", b =>
                {
                    b.Property<int>("FHashTagSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fHashTagSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FHashTagSid"));

                    b.Property<string>("FHashTag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("fHashTag")
                        .IsFixedLength();

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<string>("FMemberType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fMemberType")
                        .IsFixedLength();

                    b.Property<int?>("FPostId")
                        .HasColumnType("int")
                        .HasColumnName("fPostId");

                    b.HasKey("FHashTagSid");

                    b.ToTable("tHashtag", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.THelp", b =>
                {
                    b.Property<int>("FHelpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fHelpId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FHelpId"));

                    b.Property<int?>("FDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("fDistrictId");

                    b.Property<DateTime?>("FExpDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fExpDate");

                    b.Property<int?>("FHelpClassId")
                        .HasColumnType("int")
                        .HasColumnName("fHelpClassId");

                    b.Property<string>("FHelpDescribe")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fHelpDescribe");

                    b.Property<int?>("FHelpSkillId")
                        .HasColumnType("int")
                        .HasColumnName("fHelpSkillId");

                    b.Property<int?>("FHelpStatus")
                        .HasColumnType("int")
                        .HasColumnName("fHelpStatus");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<int?>("FMemberType")
                        .HasColumnType("int")
                        .HasColumnName("fMemberType");

                    b.Property<DateTime?>("FMfdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fMfdDate");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.Property<string>("FNid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fNId");

                    b.Property<string>("FPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPhone");

                    b.Property<int?>("FTaxId")
                        .HasColumnType("int")
                        .HasColumnName("fTaxID");

                    b.HasKey("FHelpId");

                    b.ToTable("tHelp", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.THelpClass", b =>
                {
                    b.Property<int>("FHelpClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fHelpClassId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FHelpClassId"));

                    b.Property<string>("FHelpClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fHelpClass");

                    b.HasKey("FHelpClassId");

                    b.ToTable("tHelpClass", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.THelpMessageRecord", b =>
                {
                    b.Property<string>("FContent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fContent");

                    b.Property<int?>("FHelpId")
                        .HasColumnType("int")
                        .HasColumnName("fHelpId");

                    b.Property<int>("FMessageRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fMessageRecord");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FMessageRecord"));

                    b.Property<int?>("FPublicOrNot")
                        .HasColumnType("int")
                        .HasColumnName("fPublicOrNot");

                    b.Property<DateTime?>("FSendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fSendDate");

                    b.ToTable("tHelpMessageRecord", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.THelpSkill", b =>
                {
                    b.Property<string>("FHelpSkill")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fHelpSkill");

                    b.Property<int>("FHelpSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fHelpSkillId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FHelpSkillId"));

                    b.ToTable("tHelpSkill", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TInvestRecord", b =>
                {
                    b.Property<int>("FRepoId")
                        .HasColumnType("int")
                        .HasColumnName("fRepoId");

                    b.Property<decimal>("FCost")
                        .HasColumnType("money")
                        .HasColumnName("fCost");

                    b.Property<decimal>("FDealPrice")
                        .HasColumnType("money")
                        .HasColumnName("fDealPrice");

                    b.Property<DateTime>("FEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fEndDate");

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.Property<double>("FProSum")
                        .HasColumnType("float")
                        .HasColumnName("fProSum");

                    b.Property<double>("FProTsum")
                        .HasColumnType("float")
                        .HasColumnName("fProTSum");

                    b.Property<DateTime?>("FSoldTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fSoldTime");

                    b.Property<DateTime>("FStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fStartDate");

                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.Property<int>("FStockQty")
                        .HasColumnType("int")
                        .HasColumnName("fStockQty");

                    b.HasKey("FRepoId")
                        .HasName("PK__tInvestR__0ECC57CCA8608E4C");

                    b.ToTable("tInvestRecord", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TLike", b =>
                {
                    b.Property<int>("FLikesSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fLikesSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FLikesSid"));

                    b.Property<string>("FPostId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("fPostId")
                        .IsFixedLength();

                    b.Property<string>("FTimestamp")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("fTimestamp")
                        .IsFixedLength();

                    b.Property<string>("FUserId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("fUserId")
                        .IsFixedLength();

                    b.HasKey("FLikesSid");

                    b.ToTable("tLikes", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TLoginRecord", b =>
                {
                    b.Property<int>("FLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fLogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FLogId"));

                    b.Property<string>("FIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fIp");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<byte[]>("FTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fTimestamp");

                    b.HasKey("FLogId");

                    b.ToTable("tLoginRecord", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TMatch", b =>
                {
                    b.Property<int>("FMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fMatchId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FMatchId"));

                    b.Property<int?>("FGrade")
                        .HasColumnType("int")
                        .HasColumnName("fGrade");

                    b.Property<DateTime?>("FGradeDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fGradeDateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("FHelpId")
                        .HasColumnType("int")
                        .HasColumnName("fHelpId");

                    b.Property<DateTime?>("FMatchDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fMatchDateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("FMatchStatus")
                        .HasColumnType("int")
                        .HasColumnName("fMatchStatus");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<string>("FMessage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fMessage");

                    b.Property<int?>("FPoint")
                        .HasColumnType("int")
                        .HasColumnName("fPoint");

                    b.HasKey("FMatchId");

                    b.ToTable("tMatch", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TMemberSkill", b =>
                {
                    b.Property<int?>("FHelpSkillId")
                        .HasColumnType("int")
                        .HasColumnName("fHelpSkillId");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.ToTable("tMemberSkill", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TMessage", b =>
                {
                    b.Property<int>("FMessid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fMessid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FMessid"));

                    b.Property<string>("FMessContent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMessContent");

                    b.Property<string>("FRid")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fRId");

                    b.Property<string>("FSid")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fSId");

                    b.Property<byte[]>("FTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fTimestamp");

                    b.HasKey("FMessid");

                    b.ToTable("tMessage", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TMgerScActivity", b =>
                {
                    b.Property<int>("FActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fActivityId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FActivityId"));

                    b.Property<string>("FActivityType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fActivityType");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<byte[]>("FOccurreAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fOccurreAt");

                    b.ToTable("tMgerScActivity", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TMgrScFile", b =>
                {
                    b.Property<int>("FFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fFileId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FFileId"));

                    b.Property<string>("FFileName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("fFileName");

                    b.Property<string>("FFilePath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("fFilePath");

                    b.Property<string>("FFileType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fFileType");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("fMemberId")
                        .IsFixedLength();

                    b.Property<byte[]>("FUploadateAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fUploadateAt");

                    b.ToTable("tMgrScFile", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TOrder", b =>
                {
                    b.Property<int>("FOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fOrderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FOrderId"));

                    b.Property<DateTime?>("FBeginTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fBeginTime");

                    b.Property<int?>("FExecStatus")
                        .HasColumnType("int")
                        .HasColumnName("fExecStatus");

                    b.Property<DateTime?>("FFinishTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fFinishTime");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<DateTime?>("FOrderTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fOrderTime");

                    b.Property<byte[]>("FProof")
                        .HasColumnType("image")
                        .HasColumnName("fProof");

                    b.Property<int?>("FStatus")
                        .HasColumnType("int")
                        .HasColumnName("fStatus");

                    b.Property<int?>("FTotalHelpPoint")
                        .HasColumnType("int")
                        .HasColumnName("fTotalHelpPoint");

                    b.HasKey("FOrderId");

                    b.ToTable("tOrder", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TOrderDetail", b =>
                {
                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FAmount")
                        .HasColumnType("int")
                        .HasColumnName("fAmount");

                    b.Property<int?>("FHelpPoint")
                        .HasColumnType("int")
                        .HasColumnName("fHelpPoint");

                    b.Property<int>("FOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fOrderDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FOrderDetailId"));

                    b.Property<int>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrderId");

                    b.Property<decimal?>("FPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FProductId")
                        .HasColumnType("int")
                        .HasColumnName("fProductId");

                    b.Property<string>("FUserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("tOrderDetail", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TPersonMember", b =>
                {
                    b.Property<int>("FPersonSid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fPersonSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FPersonSid"));

                    b.Property<string>("FAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAccount");

                    b.Property<DateOnly?>("FBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("fBirthDate");

                    b.Property<int?>("FDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("fDistrictId");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<string>("FFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fFirstName");

                    b.Property<string>("FIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fIdentification");

                    b.Property<string>("FIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fIp");

                    b.Property<string>("FLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fLastName");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<byte[]>("FMemberImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fMemberImage");

                    b.Property<string>("FMemberImagePath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberImagePath");

                    b.Property<string>("FPassword")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fPassword");

                    b.Property<int?>("FPermissions")
                        .HasColumnType("int")
                        .HasColumnName("fPermissions");

                    b.Property<DateOnly?>("FRegDate")
                        .HasColumnType("date")
                        .HasColumnName("fRegDate");

                    b.Property<string>("FSex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fSex")
                        .IsFixedLength();

                    b.Property<string>("FStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fStatus")
                        .IsFixedLength();

                    b.Property<int?>("FTotalAsset")
                        .HasColumnType("int")
                        .HasColumnName("fTotalAsset");

                    b.Property<int?>("FTotalHelpPoint")
                        .HasColumnType("int")
                        .HasColumnName("fTotalHelpPoint");

                    b.Property<string>("FUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fUserName");

                    b.HasKey("FPersonSid");

                    b.ToTable("tPersonMember", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TPointList", b =>
                {
                    b.Property<int>("FPointListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fPointListId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FPointListId"));

                    b.Property<int?>("FMatchId")
                        .HasColumnType("int")
                        .HasColumnName("fMatchId");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<int?>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrderId");

                    b.Property<DateTime?>("FRecordTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fRecordTime");

                    b.Property<int?>("FSourse")
                        .HasColumnType("int")
                        .HasColumnName("fSourse");

                    b.HasKey("FPointListId");

                    b.ToTable("tPointList", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TPost", b =>
                {
                    b.Property<int>("FPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fPostId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FPostId"));

                    b.Property<byte[]>("FFinStatement")
                        .HasColumnType("image")
                        .HasColumnName("fFinStatement");

                    b.Property<int?>("FLikes")
                        .HasColumnType("int")
                        .HasColumnName("fLikes");

                    b.Property<string>("FMemberId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fMemberId");

                    b.Property<string>("FMemberType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("fMemberType")
                        .IsFixedLength();

                    b.Property<int?>("FParentCommentId")
                        .HasColumnType("int")
                        .HasColumnName("fParentCommentId");

                    b.Property<string>("FPostContent")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("fPostContent");

                    b.Property<byte[]>("FTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("fTimestamp");

                    b.Property<string>("FUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fUserName");

                    b.HasKey("FPostId");

                    b.ToTable("tPost", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TProduct", b =>
                {
                    b.Property<int>("FProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fProductId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FProductId"));

                    b.Property<string>("FDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fDescription");

                    b.Property<string>("FImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FProductCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("fProductCategoryId");

                    b.Property<string>("FProductName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fProductName");

                    b.Property<int?>("FSales")
                        .HasColumnType("int")
                        .HasColumnName("fSales");

                    b.Property<int?>("FSponsorId")
                        .HasColumnType("int")
                        .HasColumnName("fSponsorId");

                    b.Property<int?>("FStatus")
                        .HasColumnType("int")
                        .HasColumnName("fStatus");

                    b.Property<int?>("FStock")
                        .HasColumnType("int")
                        .HasColumnName("fStock");

                    b.Property<int?>("FUnitlHelpPoint")
                        .HasColumnType("int")
                        .HasColumnName("fUnitlHelpPoint");

                    b.HasKey("FProductId");

                    b.ToTable("tProduct", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TProductCategory", b =>
                {
                    b.Property<int>("FProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fProductCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FProductCategoryId"));

                    b.Property<string>("FDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fDescription");

                    b.Property<string>("FProductCategoryName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fProductCategoryName");

                    b.HasKey("FProductCategoryId");

                    b.ToTable("tProductCategory", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TSponsor", b =>
                {
                    b.Property<int>("FSponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fSponsorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FSponsorId"));

                    b.Property<string>("FAddress")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("fAddress");

                    b.Property<decimal?>("FCapital")
                        .HasColumnType("money")
                        .HasColumnName("fCapital");

                    b.Property<string>("FIntroduction")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fIntroduction");

                    b.Property<string>("FPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fPhone");

                    b.Property<int?>("FSponsorCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("fSponsorCategoryId");

                    b.Property<string>("FSponsorName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fSponsorName");

                    b.Property<int?>("FStatus")
                        .HasColumnType("int")
                        .HasColumnName("fStatus");

                    b.HasKey("FSponsorId");

                    b.ToTable("tSponsor", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TSponsorCategory", b =>
                {
                    b.Property<int>("FSponsorCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fSponsorCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FSponsorCategoryId"));

                    b.Property<string>("FDescriptionFDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fDescription\r\nfDescription");

                    b.Property<string>("FSponsorCategoryrName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fSponsorCategoryrName");

                    b.HasKey("FSponsorCategoryId");

                    b.ToTable("tSponsorCategory", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TStock", b =>
                {
                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.Property<string>("FStockName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fStockName");

                    b.Property<decimal?>("FStockPriceN")
                        .HasColumnType("money")
                        .HasColumnName("fStockPriceN");

                    b.HasKey("FStockId")
                        .HasName("PK__tStock__966DF63F3E161DE1");

                    b.ToTable("tStock", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TStockInStock", b =>
                {
                    b.Property<int>("FInStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fInStockId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FInStockId"));

                    b.Property<decimal?>("FBalancePrice")
                        .HasColumnType("money")
                        .HasColumnName("fBalancePrice");

                    b.Property<string>("FBrokerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fBrokerId");

                    b.Property<decimal?>("FEstPro")
                        .HasColumnType("money")
                        .HasColumnName("fEstPro");

                    b.Property<double?>("FEstProP")
                        .HasColumnType("float")
                        .HasColumnName("fEstProP");

                    b.Property<int?>("FLeftStock")
                        .HasColumnType("int")
                        .HasColumnName("fLeftStock");

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.Property<int?>("FStockAdj")
                        .HasColumnType("int")
                        .HasColumnName("fStockAdj");

                    b.Property<decimal?>("FStockCost")
                        .HasColumnType("money")
                        .HasColumnName("fStockCost");

                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.Property<string>("FStockName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fStockName");

                    b.Property<int?>("FStockNow")
                        .HasColumnType("int")
                        .HasColumnName("fStockNow");

                    b.Property<decimal?>("FStockPriceN")
                        .HasColumnType("money")
                        .HasColumnName("fStockPriceN");

                    b.Property<decimal?>("FStockPriceT")
                        .HasColumnType("money")
                        .HasColumnName("fStockPriceT");

                    b.Property<decimal?>("FStockPriceTs")
                        .HasColumnType("money")
                        .HasColumnName("fStockPriceTS");

                    b.Property<int?>("FStockTran")
                        .HasColumnType("int")
                        .HasColumnName("fStockTran");

                    b.Property<string>("FTranType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fTranType");

                    b.HasKey("FInStockId");

                    b.ToTable("tStockInStock", (string)null);
                });

            modelBuilder.Entity("prjWankibackend.Models.Database.TTranRecord", b =>
                {
                    b.Property<int>("FTranId")
                        .HasColumnType("int")
                        .HasColumnName("fTranId");

                    b.Property<string>("FBrokerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fBrokerId");

                    b.Property<string>("FBuySell")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("fBuySell");

                    b.Property<string>("FMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fMemberId");

                    b.Property<int>("FStockId")
                        .HasColumnType("int")
                        .HasColumnName("fStockId");

                    b.Property<decimal>("FStockPrice")
                        .HasColumnType("money")
                        .HasColumnName("fStockPrice");

                    b.Property<int>("FStockQty")
                        .HasColumnType("int")
                        .HasColumnName("fStockQty");

                    b.Property<DateTime>("FTranTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fTranTime");

                    b.Property<string>("FTranType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fTranType");

                    b.HasKey("FTranId")
                        .HasName("PK__tTranRec__56FABBBF8D192D15");

                    b.ToTable("tTranRecord", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
